{"mappings":"YACA,IAAMA,EAAaC,SAASC,cAAc,kBAG1CF,EAAWG,iBAAiB,SAAS,SAAUC,GAE7C,IAA2BC,EAAAD,EAAME,cAAzBC,EAAmBF,EAAnBE,MAAOC,EAAYH,EAAZG,QAGfC,aAAaC,QACX,sBACAC,KAAKC,UAAU,CAAEL,MAAOA,EAAMM,MAAOL,QAASA,EAAQK,Q,IAK1DC,OAAOX,iBAAiB,QAAQ,WAE9B,IAAMY,EAAaJ,KAAKK,MAAMP,aAAaQ,QAAQ,wBAC3CV,EAAmBP,EAAnBO,MAAOC,EAAYR,EAAZQ,QAEXO,IACFR,EAAMM,MAAQE,EAAWR,MACzBC,EAAQK,MAAQE,EAAWP,Q,IAI/BR,EAAWG,iBAAiB,UAAU,SAAUC,GAC9CA,EAAMc,eACNT,aAAaU,WAAW,uBACxBf,EAAME,cAAcc,O","sources":["src/js/03-feedback.js"],"sourcesContent":["// Get the input element\nconst inputField = document.querySelector('.feedback-form');\n\n// Add an event listener for input changes\ninputField.addEventListener('input', function (event) {\n  // Get the current value of the input field\n  const { email, message } = event.currentTarget;\n\n  // Save the field value to local storage\n  localStorage.setItem(\n    'feedback-form-state',\n    JSON.stringify({ email: email.value, message: message.value })\n  );\n});\n\n// On page load, retrieve the saved value from local storage and populate the input field\nwindow.addEventListener('load', function () {\n  // Retrieve the saved value from local storage\n  const savedValue = JSON.parse(localStorage.getItem('feedback-form-state'));\n  const { email, message } = inputField;\n  // Check if a saved value exists and populate the input field\n  if (savedValue) {\n    email.value = savedValue.email;\n    message.value = savedValue.message;\n  }\n});\n\ninputField.addEventListener('submit', function (event) {\n  event.preventDefault;\n  localStorage.removeItem('feedback-form-state');\n  event.currentTarget.reset();\n});\n"],"names":["$b00c40859be242c5$var$inputField","document","querySelector","addEventListener","event","_currentTarget","currentTarget","email","message","localStorage","setItem","JSON","stringify","value","window","savedValue","parse","getItem","preventDefault","removeItem","reset"],"version":3,"file":"03-feedback.39b04fcd.js.map"}